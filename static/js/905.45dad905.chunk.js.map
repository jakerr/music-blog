{"version":3,"file":"static/js/905.45dad905.chunk.js","mappings":"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","sources":["Key.tsx","Keyboard.tsx","KeyHighlighter.tsx","ModeHighlighters.tsx"],"sourcesContent":["import React, { FC, useContext } from \"react\";\nimport { GlobalOptionsContext } from \"./GlobalOptions\";\nimport { Note, noteColor, bracketClass, prettyNoteName } from \"./Notes\";\n\nexport const Key: FC<{\n  note: Note;\n}> = ({ note }) => {\n  const globals = useContext(GlobalOptionsContext);\n  const blackWhite = noteColor(note);\n  const hl = note.highlight ?? \"\";\n  const bracketCss = bracketClass(note.bracket);\n  const bracketColor = note.bracketColor;\n  const noteCss = `note-${note.name}${note.acc ? \"s\" : \"\"}`;\n  const prettyName = prettyNoteName(note);\n  return (\n    <div className={`key ${blackWhite} ${hl} ${noteCss}`}>\n      <div className={`key-bracket ${bracketCss} ${bracketColor}`}>\n        <div className={`key-bracket-label`}>{note.bracketLabel}</div>\n      </div>\n      {globals.kbNoteNamesEnabled === false ? null : (\n        <span className=\"note-label\">{prettyName}</span>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState, useContext } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { KeyHighlighter } from \"./KeyHighlighter\";\nimport { SoundPlayerContext, SoundPlayer } from \"./SoundPlayer\";\nimport {\n  Note,\n  noteIndex,\n  noteForIndex,\n  noteNamed,\n  prettyNoteName,\n} from \"./Notes\";\nimport { Key } from \"./Key\";\nimport { GlobalOptionsContext } from \"./GlobalOptions\";\nimport {\n  MajorMode,\n  MajorModes,\n  ModeBuilder,\n  prettyModeName,\n  prettyPattern,\n} from \"./ModeHighlighters\";\n\nimport PianoIcon from \"@mui/icons-material/Piano\";\nimport QueueMusicIcon from \"@mui/icons-material/QueueMusic\";\nimport PaletteIcon from \"@mui/icons-material/Palette\";\n\nexport const playNote = (player: SoundPlayer | null, note: Note) => {\n  if (note.playable) {\n    player?.playNote(note, 16);\n  }\n};\n\nconst WholeToneLightBG: KeyHighlighter[] = [\n  new ModeBuilder(noteNamed(\"C0\"))\n    .AlternatingWholeTones()\n    .ColorDualLight()\n    .build(),\n];\n\nconst modeStarts = [0, 2, 4, 5, 7, 9, 11];\nconst indexForMode = (mode: MajorMode): number => {\n  const modeIndex = Object.keys(MajorModes).indexOf(mode);\n  return modeStarts[modeIndex];\n};\n\nexport const ScaleInfo: FC<{\n  scaleStart?: Note;\n  scaleMode?: MajorMode;\n  namingConvention: \"easy\" | \"technical\" | \"both\";\n  patternConvention: \"whole-clusters\" | \"whole-half\" | \"hide\";\n}> = ({ scaleStart, scaleMode, namingConvention, patternConvention }) => {\n  if (scaleStart === undefined || scaleMode === undefined) {\n    return null;\n  }\n\n  const noteName = prettyNoteName(scaleStart);\n  const modeName = prettyModeName(scaleMode, namingConvention);\n\n  return (\n    <div className=\"scale-info\">\n      <div className=\"scale-name\">\n        {noteName} {modeName}\n      </div>\n      {patternConvention === \"hide\" ? null : (\n        <div className=\"pattern-info\">\n          <span className=\"header\">Pattern</span>\n          <span className=\"value\">\n            {prettyPattern(scaleMode, patternConvention)}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const Keyboard: FC<{\n  from: Note;\n  to: Note;\n  scaleStart?: Note;\n  scaleMode?: MajorMode;\n  size?: \"small\" | \"medium\" | \"large\";\n  shouldAnimate?: boolean;\n  canTranspose?: boolean;\n  canChangeMode?: boolean;\n  staticHighlighters?: KeyHighlighter[];\n  namingConvention?: \"easy\" | \"technical\" | \"both\";\n  patternConvention?: \"whole-clusters\" | \"whole-half\" | \"hide\";\n}> = ({\n  from,\n  to,\n  scaleStart,\n  scaleMode,\n  size = \"large\",\n  shouldAnimate = false,\n  canTranspose = false,\n  canChangeMode = false,\n  staticHighlighters = [],\n  namingConvention = \"both\",\n  patternConvention = \"whole-clusters\",\n}) => {\n  const globalOptions = useContext(GlobalOptionsContext);\n  const player = useContext(SoundPlayerContext);\n  const [progress, setProgress] = useState(0.0);\n  const [lastTopNote, setLastTopNote] = useState(-1);\n  const [notes, setNotes] = useState<Note[] | null>(null);\n  const [didFadeIn, setDidFadeIn] = useState(false);\n  const [playRequested, setPlayRequested] = useState(false);\n  const [currentHighlighters, setHighlighters] =\n    useState<KeyHighlighter[]>(staticHighlighters);\n  const [currentScaleStart, setCurrentScaleStart] = useState(scaleStart);\n  const [currentScaleMode, setCurrentScaleMode] = useState(scaleMode);\n\n  // Animate in.\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setProgress(1.0);\n      setDidFadeIn(true);\n    }, 300);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // Effect to update highlighters.\n  useEffect(() => {\n    if (\n      staticHighlighters.length > 0 ||\n      currentScaleStart === undefined ||\n      currentScaleMode === undefined ||\n      notes === null\n    ) {\n      return;\n    }\n    const backgroundHl = globalOptions.kbBackgroundHighlightEnabled\n      ? WholeToneLightBG\n      : [];\n    const scaleHl = new ModeBuilder(currentScaleStart)\n      .ModeNamed(currentScaleMode)\n      .ColorDual()\n      .BracketsRunNumbers()\n      .Animate(shouldAnimate)\n      .build();\n    for (const note of notes) {\n      note.playable = false;\n    }\n    setHighlighters([...backgroundHl, scaleHl]);\n    setLastTopNote(-1);\n  }, [\n    currentScaleMode,\n    currentScaleStart,\n    globalOptions.kbBackgroundHighlightEnabled,\n    notes,\n    shouldAnimate,\n    staticHighlighters.length,\n  ]);\n\n  // Initial effect to set up notes.\n  useEffect(() => {\n    const fromIndex = noteIndex(from);\n    const toIndex = noteIndex(to);\n    const allNoteIds = Array(toIndex - fromIndex)\n      .fill(0)\n      .map((i, idx) => i + idx + fromIndex);\n    const allNotes = allNoteIds.map((noteId) => noteForIndex(noteId));\n    setNotes(allNotes);\n  }, [to, from]);\n\n  useEffect(() => {\n    setLastTopNote(-1);\n  }, [globalOptions.kbBackgroundHighlightEnabled]);\n\n  // Effect to update highlighting\n  useEffect(() => {\n    if (!notes) {\n      // console.log(\"Skip we don't have notes yet.\");\n      return;\n    }\n    const topNoteIndex =\n      progress >= 0.001 ? Math.floor(progress * notes.length) : -2;\n    if (lastTopNote === topNoteIndex) {\n      // console.log(\"Skip draw as we already drew at this progress.\");\n      return;\n    }\n    setLastTopNote(topNoteIndex);\n    for (const note of notes) {\n      note.bracket = undefined;\n      note.bracketLabel = undefined;\n      note.highlight = undefined;\n    }\n    for (const highlighter of currentHighlighters) {\n      highlighter.reset();\n    }\n    for (const highlighter of currentHighlighters) {\n      notes.forEach((note, index) => {\n        if (highlighter.opts.shouldAnimate) {\n          if (index <= topNoteIndex) {\n            highlighter?.accept(note);\n          }\n        } else {\n          highlighter?.accept(note);\n        }\n      });\n    }\n    const topNote = notes[topNoteIndex];\n    if (didFadeIn && playRequested && topNote && topNote.playable) {\n      playNote(player, topNote);\n      setPlayRequested(false);\n    }\n    // Force render of notes since we changed the contents via highlighter.\n    setNotes((previousNotes) => {\n      return previousNotes;\n    });\n  }, [\n    notes,\n    progress,\n    didFadeIn,\n    lastTopNote,\n    currentHighlighters,\n    player,\n    globalOptions,\n    playRequested,\n  ]);\n\n  // When the mode is changed we need to update the highlighter by replacing it's pattern with the pattern defined by the major mode.\n  const onChangeMode = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    if (notes === null) return;\n    const singleValue = Array.isArray(value) ? value[0] : value;\n    const modeIndex = modeStarts.findIndex((v) => v === singleValue);\n    const modeName = Object.keys(MajorModes)[modeIndex];\n    setCurrentScaleMode(modeName as MajorMode);\n  };\n\n  const onChangeStartNote = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    if (notes === null) return;\n    const singleValue = Array.isArray(value) ? value[0] : value;\n    const kbFirstKey = noteIndex(from);\n    const newStartIndex = kbFirstKey + singleValue;\n    const newStartNote = noteForIndex(newStartIndex);\n    setCurrentScaleStart(newStartNote);\n  };\n\n  const onSliderChange = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    const singleNum = Array.isArray(value) ? value[0] : value;\n    const newProgress = singleNum / 100.0;\n    setPlayRequested(true);\n    setProgress(newProgress);\n  };\n\n  const sizeClass =\n    size === \"large\" ? \"kb-80vw\" : size === \"medium\" ? \"kb-50vw\" : \"kb-20vw\";\n  return (\n    <>\n      <div className={`keyboard-wrapper ${sizeClass}`}>\n        <ScaleInfo\n          scaleStart={currentScaleStart}\n          scaleMode={currentScaleMode}\n          namingConvention={namingConvention}\n          patternConvention={patternConvention}\n        ></ScaleInfo>\n        <div className={`keyboard ${sizeClass}`}>\n          {notes?.map((note) => {\n            return <Key key={noteIndex(note)} note={note}></Key>;\n          })}\n        </div>\n        {shouldAnimate ? (\n          <>\n            <div className=\"kb-slider\">\n              <PianoIcon />\n              <Slider\n                value={Math.floor(progress * 100.0)}\n                color=\"secondary\"\n                size=\"small\"\n                valueLabelDisplay=\"off\"\n                onChange={onSliderChange}\n              />\n            </div>\n            {canTranspose && currentScaleStart !== undefined ? (\n              <div className=\"kb-slider\">\n                <QueueMusicIcon />\n                <Slider\n                  color=\"secondary\"\n                  size=\"small\"\n                  value={noteIndex(currentScaleStart)}\n                  marks={true}\n                  min={0}\n                  max={11}\n                  valueLabelFormat={(value, index) => {\n                    const note = noteForIndex(value);\n                    const name = `${note.name}${note.acc ?? \"\"}`;\n                    return name;\n                  }}\n                  valueLabelDisplay=\"on\"\n                  onChange={onChangeStartNote}\n                />\n              </div>\n            ) : undefined}\n            {canChangeMode && currentScaleMode !== undefined ? (\n              <div className=\"kb-slider\">\n                <PaletteIcon />\n                <Slider\n                  color=\"secondary\"\n                  size=\"small\"\n                  value={indexForMode(currentScaleMode)}\n                  min={0}\n                  max={11}\n                  marks={modeStarts.map((value) => {\n                    return {\n                      value: value,\n                      label: undefined,\n                    };\n                  })}\n                  step={null} // Disables the step so that selections are restricted to the marks.\n                  valueLabelDisplay=\"on\"\n                  valueLabelFormat={(value, index) => {\n                    const modeStops = [0, 2, 4, 5, 7, 9, 11];\n                    const modeIndex = modeStops.findIndex((v) => v === value);\n                    const modeName = Object.keys(MajorModes)[\n                      modeIndex\n                    ] as MajorMode;\n                    return modeName;\n                  }}\n                  onChange={onChangeMode}\n                />\n              </div>\n            ) : undefined}\n          </>\n        ) : undefined}\n      </div>\n    </>\n  );\n};\n","import { Note, noteIndex } from \"./Notes\";\n\ntype HighlighterColor = \"color-1\" | \"color-2\" | \"color-1 lighten\" | \"color-2 lighten\";\ntype BracketStyle = \"none\" | \"scale-num\" | \"run-num\" | \"whole-half\";\n\ntype KeyHighlighterOptions = {\n  startNote: Note,\n  pattern: number[],\n  oddColor: HighlighterColor,\n  evenColor: HighlighterColor,\n  shouldAnimate: boolean,\n  bracketStyle: BracketStyle,\n  forceBG: boolean\n}\n\nexport class KeyHighlighterOptionsBuilder {\n  private _startNote: Note = {name: \"C\", oct: 0};\n  private _pattern: number[] = [3, 4];\n  private _oddColor: HighlighterColor = \"color-1\";\n  private _evenColor: HighlighterColor = \"color-2\";\n  private _shouldAnimate: boolean = false;\n  private _bracketStyle: BracketStyle = \"none\";\n\n  startNote(startNote: Note) {\n    this._startNote = startNote;\n    return this;\n  }\n\n  pattern(pattern: number[]) {\n    this._pattern = pattern;\n    return this;\n  }\n\n  oddColor(oddColor: HighlighterColor) {\n    this._oddColor = oddColor;\n    return this;\n  }\n\n  evenColor(evenColor: HighlighterColor) {\n    this._evenColor = evenColor;\n    return this;\n  }\n\n  shouldAnimate(shouldAnimate: boolean) {\n    this._shouldAnimate = shouldAnimate;\n    return this;\n  }\n\n  bracketStyle(bracketStyle: \"none\" | \"scale-num\" | \"run-num\" | \"whole-half\") {\n    this._bracketStyle = bracketStyle;\n    return this;\n  }\n\n  build(): KeyHighlighterOptions {\n    return {\n      startNote: this._startNote,\n      pattern: this._pattern,\n      oddColor: this._oddColor,\n      evenColor: this._evenColor,\n      shouldAnimate: this._shouldAnimate,\n      bracketStyle: this._bracketStyle,\n      forceBG: false\n    };\n  }\n}\n\n\nexport class KeyHighlighter {\n  opts: KeyHighlighterOptions;\n\n  patternIndex = 0;\n  parity: \"odd\" | \"even\" | \"searching\" = \"searching\";\n  currentRun: number = 0;\n  scaleNumber: number = 0;\n  runTarget: number = 0;\n  halfSteps: number = 0;\n  step: \"root\" | \"half\" | \"whole\" = \"root\";\n\n  constructor(options: KeyHighlighterOptions) {\n    this.opts = options;\n  }\n\n  reset() {\n    this.parity = \"searching\";\n    this.currentRun = 0;\n    this.scaleNumber = 0;\n    this.halfSteps = 0;\n    this.patternIndex = 0;\n    this.step = \"root\";\n  }\n\n  startRun(note: Note) {\n    let bracketPos: \"middle\" | \"left\" =\n      (this.patternIndex > 0 || this.scaleNumber > 1) ? \"middle\" : \"left\";\n    this.addBracket(note, bracketPos);\n    this.halfSteps = 0;\n    this.runTarget = this.opts.pattern[this.patternIndex];\n    this.patternIndex = this.patternIndex + 1;\n    this.doHighlight(note);\n  }\n\n  addBracket(note: Note, bracket: \"left\" | \"right\" | \"middle\") {\n    if (this.opts.bracketStyle !== \"none\") {\n      note.bracket = bracket;\n      note.bracketColor = this.parity === \"odd\" ? `bracket-${this.opts.oddColor}` : `bracket-${this.opts.evenColor}`;\n    }\n  }\n\n  addBracketLabel(note: Note) {\n    if (this.opts.bracketStyle !== \"none\") {\n      let label = \"\"\n      switch (this.opts.bracketStyle) {\n        case 'run-num':\n          label = `${this.currentRun}`\n          break;\n\n        case 'scale-num':\n          label = `${this.scaleNumber}`\n          break;\n\n        case 'whole-half':\n          label = \"\" + this.step.charAt(0);\n          break;\n      \n        default:\n          break;\n      }\n\n      note.bracketLabel = `${label}`;\n    }\n  }\n\n  endRun(note: Note) {\n    let bracketPos: \"left\" | \"middle\" | \"right\" = \n    this.scaleNumber === 1 ? \"left\" :\n    ((this.scaleNumber > 1 && this.scaleNumber < 7) ? \"middle\" : \"right\");\n    this.addBracket(note, bracketPos);\n    this.parity = this.parity === \"odd\" ? \"even\" : \"odd\";\n    if (this.patternIndex >= this.opts.pattern.length) {\n      this.parity = \"searching\";\n      this.step = \"root\";\n      this.patternIndex = 0;\n    }\n    this.currentRun = 0;\n  }\n\n  doHighlight(note: Note) {\n    const color = this.parity === \"odd\" ? `tone-${this.opts.oddColor}` : `tone-${this.opts.evenColor}`;\n    this.currentRun += 1;\n    this.scaleNumber += 1;\n    if (this.opts.shouldAnimate) {\n      note.playable = true;\n    }\n    note.highlight = color;\n    this.addBracketLabel(note);\n    if (this.currentRun >= this.runTarget) {\n      this.endRun(note);\n    }\n  }\n\n  accept(note: Note) {\n    const targetName = this.opts.startNote.name + (this.opts.startNote.acc ?? \"\");\n    const noteName = note.name + (note.acc ?? \"\");\n    note.bracket = undefined;\n    // Not yet highlighting\n    if (this.parity === \"searching\") {\n      if (targetName === noteName) {\n        this.parity = noteIndex(note) % 2 === 0 ? \"odd\" : \"even\";\n        this.step = this.halfSteps === 0 ? \"root\" : \"half\";\n        this.scaleNumber = 0;\n        this.startRun(note);\n        return;\n      }\n      return;\n    }\n\n    this.halfSteps += 1;\n    if (this.currentRun <= 0) {\n      this.step = \"half\";\n      this.startRun(note);\n      return;\n    }\n\n    this.addBracket(note, \"middle\");\n    if (this.halfSteps % 2 === 0) {\n      this.step = \"whole\";\n      this.doHighlight(note);\n      return;\n    }\n    return;\n  }\n}\n","import { Note } from \"./Notes\";\nimport { KeyHighlighter, KeyHighlighterOptionsBuilder } from \"./KeyHighlighter\";\n\nexport type MajorMode =\n  | \"Ionian\"\n  | \"Dorian\"\n  | \"Phrygian\"\n  | \"Lydian\"\n  | \"Mixolydian\"\n  | \"Aeolian\"\n  | \"Locrian\"\n  | \"Whole Tone\";\ntype MajorModeMap = {\n  [key in MajorMode]: number[];\n};\n\nexport function prettyModeName(\n  scaleMode: MajorMode,\n  convention: \"easy\" | \"technical\" | \"both\"\n): string {\n  switch (scaleMode) {\n    case \"Ionian\":\n      return convention === \"easy\"\n        ? \"Major\"\n        : convention === \"technical\"\n        ? \"Ionian\"\n        : \"Major (Ionian)\";\n    case \"Aeolian\":\n      return convention === \"easy\"\n        ? \"Minor\"\n        : convention === \"technical\"\n        ? \"Aeolian\"\n        : \" Minor (Aeolian)\";\n    default:\n      return scaleMode;\n  }\n}\n\nexport function prettyPattern(\n  scaleMode: MajorMode,\n  convention: \"whole-clusters\" | \"whole-half\"\n): string {\n  const pattern = MajorModes[scaleMode];\n  if (convention === \"whole-clusters\") {\n    return pattern.join(\", \");\n  }\n  // Whole halfs\n  let result = \"\";\n  let halfs = 0;\n  let steps = [];\n  for (const cluster of pattern) {\n    if (result.length > 0) {\n      result += \", \";\n    }\n    for (let i = 1; i < cluster; i++) {\n      steps.push(\"W\");\n      halfs += 2;\n    }\n    if (halfs === 10) {\n      // Special case for scales that end in a whole step.\n      steps.push(\"W\");\n      halfs += 2;\n    } else {\n      steps.push(\"H\");\n      halfs += 1;\n    }\n  }\n  return steps.join(\", \");\n}\n\nexport const MajorModes: MajorModeMap = {\n  Ionian: [3, 4],\n  Dorian: [2, 4, 1],\n  Phrygian: [1, 4, 2],\n  Lydian: [4, 3],\n  Mixolydian: [3, 3, 1],\n  Aeolian: [2, 3, 2],\n  Locrian: [1, 3, 3],\n  // Special case: Whole tone scale\n  \"Whole Tone\": [6],\n};\n\nclass ModeHighlighterOptionsBuilder extends KeyHighlighterOptionsBuilder {\n  mode(mode: MajorMode) {\n    const pattern = MajorModes[mode];\n    super.pattern(pattern);\n    return this;\n  }\n}\n\nexport class ModeBuilder {\n  private _opts: ModeHighlighterOptionsBuilder =\n    new ModeHighlighterOptionsBuilder();\n  constructor(startNote: Note) {\n    this._opts.startNote(startNote);\n  }\n\n  Note(note: Note) {\n    this._opts.startNote(note);\n    return this;\n  }\n\n  AlternatingWholeTones() {\n    this._opts.pattern(Array(12).fill(1));\n    return this;\n  }\n\n  WholeTone() {\n    this._opts.pattern([6]);\n    return this;\n  }\n\n  ModeNamed(name: MajorMode) {\n    this._opts.mode(name);\n    return this;\n  }\n\n  Ionian() {\n    this._opts.mode(\"Ionian\");\n    return this;\n  }\n\n  Dorian() {\n    this._opts.mode(\"Dorian\");\n    return this;\n  }\n\n  Phrygian() {\n    this._opts.mode(\"Phrygian\");\n    return this;\n  }\n\n  Lydian() {\n    this._opts.mode(\"Lydian\");\n    return this;\n  }\n\n  Mixolydian() {\n    this._opts.mode(\"Mixolydian\");\n    return this;\n  }\n\n  Aeolean() {\n    this._opts.mode(\"Aeolian\");\n    return this;\n  }\n\n  Locrean() {\n    this._opts.mode(\"Locrian\");\n    return this;\n  }\n\n  BracketsWholeHalf() {\n    this._opts.bracketStyle(\"whole-half\");\n    return this;\n  }\n\n  BracketsRunNumbers() {\n    this._opts.bracketStyle(\"run-num\");\n    return this;\n  }\n\n  BracketsScaleNumbers() {\n    this._opts.bracketStyle(\"scale-num\");\n    return this;\n  }\n\n  Animate(shouldAnimate = true) {\n    this._opts.shouldAnimate(shouldAnimate);\n    return this;\n  }\n\n  ColorSingleFirst() {\n    this._opts.oddColor(\"color-1\");\n    this._opts.evenColor(\"color-1\");\n    return this;\n  }\n\n  ColorSingleSecond() {\n    this._opts.oddColor(\"color-2\");\n    this._opts.evenColor(\"color-2\");\n    return this;\n  }\n\n  ColorDual() {\n    this._opts.oddColor(\"color-1\");\n    this._opts.evenColor(\"color-2\");\n    return this;\n  }\n\n  ColorDualLight() {\n    this._opts.oddColor(\"color-1 lighten\");\n    this._opts.evenColor(\"color-2 lighten\");\n    return this;\n  }\n\n  build(): KeyHighlighter {\n    return new KeyHighlighter(this._opts.build());\n  }\n}\n"],"names":["Key","note","globals","useContext","GlobalOptionsContext","blackWhite","noteColor","hl","highlight","bracketCss","bracketClass","bracket","bracketColor","noteCss","name","acc","prettyName","prettyNoteName","className","bracketLabel","kbNoteNamesEnabled","WholeToneLightBG","ModeBuilder","noteNamed","AlternatingWholeTones","ColorDualLight","build","modeStarts","indexForMode","mode","modeIndex","Object","keys","MajorModes","indexOf","ScaleInfo","scaleStart","scaleMode","namingConvention","patternConvention","undefined","noteName","modeName","prettyModeName","prettyPattern","Keyboard","from","to","size","shouldAnimate","canTranspose","canChangeMode","staticHighlighters","globalOptions","player","SoundPlayerContext","useState","progress","setProgress","lastTopNote","setLastTopNote","notes","setNotes","didFadeIn","setDidFadeIn","playRequested","setPlayRequested","currentHighlighters","setHighlighters","currentScaleStart","setCurrentScaleStart","currentScaleMode","setCurrentScaleMode","useEffect","timeoutId","setTimeout","clearTimeout","length","backgroundHl","kbBackgroundHighlightEnabled","scaleHl","ModeNamed","ColorDual","BracketsRunNumbers","Animate","playable","fromIndex","noteIndex","toIndex","allNotes","Array","fill","map","i","idx","noteId","noteForIndex","topNoteIndex","Math","floor","reset","highlighter","forEach","index","opts","accept","topNote","playNote","previousNotes","sizeClass","Piano","Slider","value","color","valueLabelDisplay","onChange","e","activeThumb","newProgress","isArray","QueueMusic","marks","min","max","valueLabelFormat","singleValue","newStartIndex","newStartNote","Palette","label","step","findIndex","v","KeyHighlighterOptionsBuilder","_startNote","oct","_pattern","_oddColor","_evenColor","_shouldAnimate","_bracketStyle","startNote","this","pattern","oddColor","evenColor","bracketStyle","forceBG","KeyHighlighter","options","patternIndex","parity","currentRun","scaleNumber","runTarget","halfSteps","bracketPos","addBracket","doHighlight","charAt","addBracketLabel","endRun","targetName","startRun","convention","join","result","halfs","steps","cluster","push","Ionian","Dorian","Phrygian","Lydian","Mixolydian","Aeolian","Locrian","ModeHighlighterOptionsBuilder","_opts"],"sourceRoot":""}