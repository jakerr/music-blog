{"version":3,"file":"static/js/905.c66e446c.chunk.js","mappings":"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","sources":["GlobalOptions.tsx","Key.tsx","Keyboard.tsx","KeyHighlighter.tsx","ModeHighlighters.tsx","Notes.tsx","SoundPlayer.tsx"],"sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  PropsWithChildren,\n} from \"react\";\nimport Fab from \"@mui/material/Fab\";\nimport Switch from \"@mui/material/Switch\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { FormControlLabel, FormGroup } from \"@mui/material\";\n\nexport const GlobalOptionsContext = createContext<GlobalOptions>({\n  kbBackgroundHighlightEnabled: true,\n  kbSoundEnabled: true,\n  kbNoteNamesEnabled: true,\n});\n\nexport type GlobalOptions = {\n  kbBackgroundHighlightEnabled: boolean;\n  kbSoundEnabled: boolean;\n  kbNoteNamesEnabled: boolean;\n};\n\nexport const OptionsWidget: React.FC<{\n  setGlobalOptions: (opts: GlobalOptions) => void;\n}> = ({ setGlobalOptions }) => {\n  const [rev, setRev] = useState(0);\n  const [appliedRev, setAppliedRev] = useState(0);\n  const options = useContext(GlobalOptionsContext);\n  const [active, setActive] = useState(false);\n  const [highlightsOn, setHighlightsOn] = useState(\n    options.kbBackgroundHighlightEnabled\n  );\n  const [noteNamesOn, setNoteNamesOn] = useState(options.kbNoteNamesEnabled);\n\n  const onSettingsClick = () => {\n    setActive(!active);\n  };\n\n  const onHighlightBgToggle = () => {\n    setHighlightsOn(!highlightsOn);\n  };\n\n  const onNoteNamesToggle = () => {\n    setNoteNamesOn(!noteNamesOn);\n  };\n\n  const onUnHover = () => {\n    if (active) {\n      setActive(false);\n    }\n  };\n\n  useEffect(() => {\n    setRev((r) => r + 1);\n  }, [highlightsOn, noteNamesOn]);\n\n  useEffect(() => {\n    if (rev !== appliedRev) {\n      setGlobalOptions({\n        ...options,\n        kbBackgroundHighlightEnabled: highlightsOn,\n        kbNoteNamesEnabled: noteNamesOn,\n      });\n      setAppliedRev(rev);\n    }\n  }, [appliedRev, highlightsOn, noteNamesOn, options, rev, setGlobalOptions]);\n\n  const settingsColor = active ? \"secondary\" : \"default\";\n  const settingsSize = active ? \"medium\" : \"small\";\n  return (\n    <div\n      className={`options-widget${active ? \" active\" : \"\"}`}\n      onMouseLeave={onUnHover}\n    >\n      {active ? (\n        <div className=\"options-list\">\n          <FormGroup>\n            {toggle(\"Show Note Names\", noteNamesOn, onNoteNamesToggle)}\n            {toggle(\"Highlight Wholetones\", highlightsOn, onHighlightBgToggle)}\n          </FormGroup>\n        </div>\n      ) : undefined}\n      <Fab color={settingsColor} size={settingsSize} onClick={onSettingsClick}>\n        <SettingsIcon />\n      </Fab>\n    </div>\n  );\n};\n\nexport const GlobalOptionsProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [globalOptions, setGlobalOptions] = useState<GlobalOptions>({\n    kbBackgroundHighlightEnabled: false,\n    kbSoundEnabled: true,\n    kbNoteNamesEnabled: true,\n  });\n\n  return (\n    <GlobalOptionsContext.Provider value={globalOptions}>\n      {children}\n      <OptionsWidget setGlobalOptions={setGlobalOptions} />\n    </GlobalOptionsContext.Provider>\n  );\n};\nfunction toggle(\n  label: string,\n  highlightsOn: boolean,\n  onHighlightBgClick: () => void\n) {\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={highlightsOn}\n          onChange={onHighlightBgClick}\n          inputProps={{ \"aria-label\": \"controlled\" }}\n        />\n      }\n      label={label}\n      labelPlacement=\"end\"\n      componentsProps={{ typography: { color: \"#ddd\" } }}\n    />\n  );\n}\n","import React, { FC, useContext } from \"react\";\nimport { GlobalOptionsContext } from \"./GlobalOptions\";\nimport { Note, noteColor, bracketClass, prettyNoteName } from \"./Notes\";\n\nexport const Key: FC<{\n  note: Note;\n}> = ({ note }) => {\n  const globals = useContext(GlobalOptionsContext);\n  const blackWhite = noteColor(note);\n  const hl = note.highlight ?? \"\";\n  const bracketCss = bracketClass(note.bracket);\n  const bracketColor = note.bracketColor;\n  const noteCss = `note-${note.name}${note.acc ? \"s\" : \"\"}`;\n  const prettyName = prettyNoteName(note);\n  return (\n    <div className={`key ${blackWhite} ${hl} ${noteCss}`}>\n      <div className={`key-bracket ${bracketCss} ${bracketColor}`}>\n        <div className={`key-bracket-label`}>{note.bracketLabel}</div>\n      </div>\n      {globals.kbNoteNamesEnabled === false ? null : (\n        <span className=\"note-label\">{prettyName}</span>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState, useContext } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport { KeyHighlighter } from \"./KeyHighlighter\";\nimport { SoundPlayerContext, SoundPlayer } from \"./SoundPlayer\";\nimport {\n  Note,\n  noteIndex,\n  noteForIndex,\n  noteNamed,\n  prettyNoteName,\n} from \"./Notes\";\nimport { Key } from \"./Key\";\nimport { GlobalOptionsContext } from \"./GlobalOptions\";\nimport {\n  MajorMode,\n  MajorModes,\n  ModeBuilder,\n  prettyModeName,\n  prettyPattern,\n} from \"./ModeHighlighters\";\n\nimport PianoIcon from \"@mui/icons-material/Piano\";\nimport QueueMusicIcon from \"@mui/icons-material/QueueMusic\";\nimport PaletteIcon from \"@mui/icons-material/Palette\";\n\nexport const playNote = (player: SoundPlayer | null, note: Note) => {\n  if (note.playable) {\n    player?.playNote(note, 16);\n  }\n};\n\nconst WholeToneLightBG: KeyHighlighter[] = [\n  new ModeBuilder(noteNamed(\"C0\"))\n    .AlternatingWholeTones()\n    .ColorDualLight()\n    .build(),\n];\n\nconst modeStarts = [0, 2, 4, 5, 7, 9, 11];\nconst indexForMode = (mode: MajorMode): number => {\n  const modeIndex = Object.keys(MajorModes).indexOf(mode);\n  return modeStarts[modeIndex];\n};\n\nexport const ScaleInfo: FC<{\n  scaleStart?: Note;\n  scaleMode?: MajorMode;\n  namingConvention: \"easy\" | \"technical\" | \"both\";\n  patternConvention: \"whole-clusters\" | \"whole-half\" | \"hide\";\n}> = ({ scaleStart, scaleMode, namingConvention, patternConvention }) => {\n  if (scaleStart === undefined || scaleMode === undefined) {\n    return null;\n  }\n\n  const noteName = prettyNoteName(scaleStart);\n  const modeName = prettyModeName(scaleMode, namingConvention);\n\n  return (\n    <div className=\"scale-info\">\n      <div className=\"scale-name\">\n        {noteName} {modeName}\n      </div>\n      {patternConvention === \"hide\" ? null : (\n        <div className=\"pattern-info\">\n          <span className=\"header\">Pattern</span>\n          <span className=\"value\">\n            {prettyPattern(scaleMode, patternConvention)}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const Keyboard: FC<{\n  from: Note;\n  to: Note;\n  scaleStart?: Note;\n  scaleMode?: MajorMode;\n  size?: \"small\" | \"medium\" | \"large\";\n  shouldAnimate?: boolean;\n  canTranspose?: boolean;\n  canChangeMode?: boolean;\n  staticHighlighters?: KeyHighlighter[];\n  namingConvention?: \"easy\" | \"technical\" | \"both\";\n  patternConvention?: \"whole-clusters\" | \"whole-half\" | \"hide\";\n}> = ({\n  from,\n  to,\n  scaleStart,\n  scaleMode,\n  size = \"large\",\n  shouldAnimate = false,\n  canTranspose = false,\n  canChangeMode = false,\n  staticHighlighters = [],\n  namingConvention = \"both\",\n  patternConvention = \"whole-clusters\",\n}) => {\n  const globalOptions = useContext(GlobalOptionsContext);\n  const player = useContext(SoundPlayerContext);\n  const [progress, setProgress] = useState(0.0);\n  const [lastTopNote, setLastTopNote] = useState(-1);\n  const [notes, setNotes] = useState<Note[] | null>(null);\n  const [didFadeIn, setDidFadeIn] = useState(false);\n  const [playRequested, setPlayRequested] = useState(false);\n  const [currentHighlighters, setHighlighters] =\n    useState<KeyHighlighter[]>(staticHighlighters);\n  const [currentScaleStart, setCurrentScaleStart] = useState(scaleStart);\n  const [currentScaleMode, setCurrentScaleMode] = useState(scaleMode);\n\n  // Animate in.\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setProgress(1.0);\n      setDidFadeIn(true);\n    }, 300);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  // Effect to update highlighters.\n  useEffect(() => {\n    if (\n      staticHighlighters.length > 0 ||\n      currentScaleStart === undefined ||\n      currentScaleMode === undefined ||\n      notes === null\n    ) {\n      return;\n    }\n    const backgroundHl = globalOptions.kbBackgroundHighlightEnabled\n      ? WholeToneLightBG\n      : [];\n    const scaleHl = new ModeBuilder(currentScaleStart)\n      .ModeNamed(currentScaleMode)\n      .ColorDual()\n      .BracketsRunNumbers()\n      .Animate(shouldAnimate)\n      .build();\n    for (const note of notes) {\n      note.playable = false;\n    }\n    setHighlighters([...backgroundHl, scaleHl]);\n    setLastTopNote(-1);\n  }, [\n    currentScaleMode,\n    currentScaleStart,\n    globalOptions.kbBackgroundHighlightEnabled,\n    notes,\n    shouldAnimate,\n    staticHighlighters.length,\n  ]);\n\n  // Initial effect to set up notes.\n  useEffect(() => {\n    const fromIndex = noteIndex(from);\n    const toIndex = noteIndex(to);\n    const allNoteIds = Array(toIndex - fromIndex)\n      .fill(0)\n      .map((i, idx) => i + idx + fromIndex);\n    const allNotes = allNoteIds.map((noteId) => noteForIndex(noteId));\n    setNotes(allNotes);\n  }, [to, from]);\n\n  useEffect(() => {\n    setLastTopNote(-1);\n  }, [globalOptions.kbBackgroundHighlightEnabled]);\n\n  // Effect to update highlighting\n  useEffect(() => {\n    if (!notes) {\n      // console.log(\"Skip we don't have notes yet.\");\n      return;\n    }\n    const topNoteIndex =\n      progress >= 0.001 ? Math.floor(progress * notes.length) : -2;\n    if (lastTopNote === topNoteIndex) {\n      // console.log(\"Skip draw as we already drew at this progress.\");\n      return;\n    }\n    setLastTopNote(topNoteIndex);\n    for (const note of notes) {\n      note.bracket = undefined;\n      note.bracketLabel = undefined;\n      note.highlight = undefined;\n    }\n    for (const highlighter of currentHighlighters) {\n      highlighter.reset();\n    }\n    for (const highlighter of currentHighlighters) {\n      notes.forEach((note, index) => {\n        if (highlighter.opts.shouldAnimate) {\n          if (index <= topNoteIndex) {\n            highlighter?.accept(note);\n          }\n        } else {\n          highlighter?.accept(note);\n        }\n      });\n    }\n    const topNote = notes[topNoteIndex];\n    if (didFadeIn && playRequested && topNote && topNote.playable) {\n      playNote(player, topNote);\n      setPlayRequested(false);\n    }\n    // Force render of notes since we changed the contents via highlighter.\n    setNotes((previousNotes) => {\n      return previousNotes;\n    });\n  }, [\n    notes,\n    progress,\n    didFadeIn,\n    lastTopNote,\n    currentHighlighters,\n    player,\n    globalOptions,\n    playRequested,\n  ]);\n\n  // When the mode is changed we need to update the highlighter by replacing it's pattern with the pattern defined by the major mode.\n  const onChangeMode = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    if (notes === null) return;\n    const singleValue = Array.isArray(value) ? value[0] : value;\n    const modeIndex = modeStarts.findIndex((v) => v === singleValue);\n    const modeName = Object.keys(MajorModes)[modeIndex];\n    setCurrentScaleMode(modeName as MajorMode);\n  };\n\n  const onChangeStartNote = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    if (notes === null) return;\n    const singleValue = Array.isArray(value) ? value[0] : value;\n    const kbFirstKey = noteIndex(from);\n    const newStartIndex = kbFirstKey + singleValue;\n    const newStartNote = noteForIndex(newStartIndex);\n    setCurrentScaleStart(newStartNote);\n  };\n\n  const onSliderChange = (\n    e: Event,\n    value: number | number[],\n    activeThumb: number\n  ) => {\n    const singleNum = Array.isArray(value) ? value[0] : value;\n    const newProgress = singleNum / 100.0;\n    setPlayRequested(true);\n    setProgress(newProgress);\n  };\n\n  const sizeClass =\n    size === \"large\" ? \"kb-80vw\" : size === \"medium\" ? \"kb-50vw\" : \"kb-20vw\";\n  return (\n    <>\n      <div className={`keyboard-wrapper ${sizeClass}`}>\n        <ScaleInfo\n          scaleStart={currentScaleStart}\n          scaleMode={currentScaleMode}\n          namingConvention={namingConvention}\n          patternConvention={patternConvention}\n        ></ScaleInfo>\n        <div className={`keyboard ${sizeClass}`}>\n          {notes?.map((note) => {\n            return <Key key={noteIndex(note)} note={note}></Key>;\n          })}\n        </div>\n        {shouldAnimate ? (\n          <>\n            <div className=\"kb-slider\">\n              <PianoIcon />\n              <Slider\n                value={Math.floor(progress * 100.0)}\n                color=\"secondary\"\n                size=\"small\"\n                valueLabelDisplay=\"off\"\n                onChange={onSliderChange}\n              />\n            </div>\n            {canTranspose && currentScaleStart !== undefined ? (\n              <div className=\"kb-slider\">\n                <QueueMusicIcon />\n                <Slider\n                  color=\"secondary\"\n                  size=\"small\"\n                  value={noteIndex(currentScaleStart)}\n                  marks={true}\n                  min={0}\n                  max={11}\n                  valueLabelFormat={(value, index) => {\n                    const note = noteForIndex(value);\n                    const name = `${note.name}${note.acc ?? \"\"}`;\n                    return name;\n                  }}\n                  valueLabelDisplay=\"on\"\n                  onChange={onChangeStartNote}\n                />\n              </div>\n            ) : undefined}\n            {canChangeMode && currentScaleMode !== undefined ? (\n              <div className=\"kb-slider\">\n                <PaletteIcon />\n                <Slider\n                  color=\"secondary\"\n                  size=\"small\"\n                  value={indexForMode(currentScaleMode)}\n                  min={0}\n                  max={11}\n                  marks={modeStarts.map((value) => {\n                    return {\n                      value: value,\n                      label: undefined,\n                    };\n                  })}\n                  step={null} // Disables the step so that selections are restricted to the marks.\n                  valueLabelDisplay=\"on\"\n                  valueLabelFormat={(value, index) => {\n                    const modeStops = [0, 2, 4, 5, 7, 9, 11];\n                    const modeIndex = modeStops.findIndex((v) => v === value);\n                    const modeName = Object.keys(MajorModes)[\n                      modeIndex\n                    ] as MajorMode;\n                    return modeName;\n                  }}\n                  onChange={onChangeMode}\n                />\n              </div>\n            ) : undefined}\n          </>\n        ) : undefined}\n      </div>\n    </>\n  );\n};\n","import { Note, noteIndex } from \"./Notes\";\n\ntype HighlighterColor = \"color-1\" | \"color-2\" | \"color-1 lighten\" | \"color-2 lighten\";\ntype BracketStyle = \"none\" | \"scale-num\" | \"run-num\" | \"whole-half\";\n\ntype KeyHighlighterOptions = {\n  startNote: Note,\n  pattern: number[],\n  oddColor: HighlighterColor,\n  evenColor: HighlighterColor,\n  shouldAnimate: boolean,\n  bracketStyle: BracketStyle,\n  forceBG: boolean\n}\n\nexport class KeyHighlighterOptionsBuilder {\n  private _startNote: Note = {name: \"C\", oct: 0};\n  private _pattern: number[] = [3, 4];\n  private _oddColor: HighlighterColor = \"color-1\";\n  private _evenColor: HighlighterColor = \"color-2\";\n  private _shouldAnimate: boolean = false;\n  private _bracketStyle: BracketStyle = \"none\";\n\n  startNote(startNote: Note) {\n    this._startNote = startNote;\n    return this;\n  }\n\n  pattern(pattern: number[]) {\n    this._pattern = pattern;\n    return this;\n  }\n\n  oddColor(oddColor: HighlighterColor) {\n    this._oddColor = oddColor;\n    return this;\n  }\n\n  evenColor(evenColor: HighlighterColor) {\n    this._evenColor = evenColor;\n    return this;\n  }\n\n  shouldAnimate(shouldAnimate: boolean) {\n    this._shouldAnimate = shouldAnimate;\n    return this;\n  }\n\n  bracketStyle(bracketStyle: \"none\" | \"scale-num\" | \"run-num\" | \"whole-half\") {\n    this._bracketStyle = bracketStyle;\n    return this;\n  }\n\n  build(): KeyHighlighterOptions {\n    return {\n      startNote: this._startNote,\n      pattern: this._pattern,\n      oddColor: this._oddColor,\n      evenColor: this._evenColor,\n      shouldAnimate: this._shouldAnimate,\n      bracketStyle: this._bracketStyle,\n      forceBG: false\n    };\n  }\n}\n\n\nexport class KeyHighlighter {\n  opts: KeyHighlighterOptions;\n\n  patternIndex = 0;\n  parity: \"odd\" | \"even\" | \"searching\" = \"searching\";\n  currentRun: number = 0;\n  scaleNumber: number = 0;\n  runTarget: number = 0;\n  halfSteps: number = 0;\n  step: \"root\" | \"half\" | \"whole\" = \"root\";\n\n  constructor(options: KeyHighlighterOptions) {\n    this.opts = options;\n  }\n\n  reset() {\n    this.parity = \"searching\";\n    this.currentRun = 0;\n    this.scaleNumber = 0;\n    this.halfSteps = 0;\n    this.patternIndex = 0;\n    this.step = \"root\";\n  }\n\n  startRun(note: Note) {\n    let bracketPos: \"middle\" | \"left\" =\n      (this.patternIndex > 0 || this.scaleNumber > 1) ? \"middle\" : \"left\";\n    this.addBracket(note, bracketPos);\n    this.halfSteps = 0;\n    this.runTarget = this.opts.pattern[this.patternIndex];\n    this.patternIndex = this.patternIndex + 1;\n    this.doHighlight(note);\n  }\n\n  addBracket(note: Note, bracket: \"left\" | \"right\" | \"middle\") {\n    if (this.opts.bracketStyle !== \"none\") {\n      note.bracket = bracket;\n      note.bracketColor = this.parity === \"odd\" ? `bracket-${this.opts.oddColor}` : `bracket-${this.opts.evenColor}`;\n    }\n  }\n\n  addBracketLabel(note: Note) {\n    if (this.opts.bracketStyle !== \"none\") {\n      let label = \"\"\n      switch (this.opts.bracketStyle) {\n        case 'run-num':\n          label = `${this.currentRun}`\n          break;\n\n        case 'scale-num':\n          label = `${this.scaleNumber}`\n          break;\n\n        case 'whole-half':\n          label = \"\" + this.step.charAt(0);\n          break;\n      \n        default:\n          break;\n      }\n\n      note.bracketLabel = `${label}`;\n    }\n  }\n\n  endRun(note: Note) {\n    let bracketPos: \"left\" | \"middle\" | \"right\" = \n    this.scaleNumber === 1 ? \"left\" :\n    ((this.scaleNumber > 1 && this.scaleNumber < 7) ? \"middle\" : \"right\");\n    this.addBracket(note, bracketPos);\n    this.parity = this.parity === \"odd\" ? \"even\" : \"odd\";\n    if (this.patternIndex >= this.opts.pattern.length) {\n      this.parity = \"searching\";\n      this.step = \"root\";\n      this.patternIndex = 0;\n    }\n    this.currentRun = 0;\n  }\n\n  doHighlight(note: Note) {\n    const color = this.parity === \"odd\" ? `tone-${this.opts.oddColor}` : `tone-${this.opts.evenColor}`;\n    this.currentRun += 1;\n    this.scaleNumber += 1;\n    if (this.opts.shouldAnimate) {\n      note.playable = true;\n    }\n    note.highlight = color;\n    this.addBracketLabel(note);\n    if (this.currentRun >= this.runTarget) {\n      this.endRun(note);\n    }\n  }\n\n  accept(note: Note) {\n    const targetName = this.opts.startNote.name + (this.opts.startNote.acc ?? \"\");\n    const noteName = note.name + (note.acc ?? \"\");\n    note.bracket = undefined;\n    // Not yet highlighting\n    if (this.parity === \"searching\") {\n      if (targetName === noteName) {\n        this.parity = noteIndex(note) % 2 === 0 ? \"odd\" : \"even\";\n        this.step = this.halfSteps === 0 ? \"root\" : \"half\";\n        this.scaleNumber = 0;\n        this.startRun(note);\n        return;\n      }\n      return;\n    }\n\n    this.halfSteps += 1;\n    if (this.currentRun <= 0) {\n      this.step = \"half\";\n      this.startRun(note);\n      return;\n    }\n\n    this.addBracket(note, \"middle\");\n    if (this.halfSteps % 2 === 0) {\n      this.step = \"whole\";\n      this.doHighlight(note);\n      return;\n    }\n    return;\n  }\n}\n","import { Note } from \"./Notes\";\nimport { KeyHighlighter, KeyHighlighterOptionsBuilder } from \"./KeyHighlighter\";\n\nexport type MajorMode =\n  | \"Ionian\"\n  | \"Dorian\"\n  | \"Phrygian\"\n  | \"Lydian\"\n  | \"Mixolydian\"\n  | \"Aeolian\"\n  | \"Locrian\"\n  | \"Whole Tone\";\ntype MajorModeMap = {\n  [key in MajorMode]: number[];\n};\n\nexport function prettyModeName(\n  scaleMode: MajorMode,\n  convention: \"easy\" | \"technical\" | \"both\"\n): string {\n  switch (scaleMode) {\n    case \"Ionian\":\n      return convention === \"easy\"\n        ? \"Major\"\n        : convention === \"technical\"\n        ? \"Ionian\"\n        : \"Major (Ionian)\";\n    case \"Aeolian\":\n      return convention === \"easy\"\n        ? \"Minor\"\n        : convention === \"technical\"\n        ? \"Aeolian\"\n        : \" Minor (Aeolian)\";\n    default:\n      return scaleMode;\n  }\n}\n\nexport function prettyPattern(\n  scaleMode: MajorMode,\n  convention: \"whole-clusters\" | \"whole-half\"\n): string {\n  const pattern = MajorModes[scaleMode];\n  if (convention === \"whole-clusters\") {\n    return pattern.join(\", \");\n  }\n  // Whole halfs\n  let result = \"\";\n  let halfs = 0;\n  let steps = [];\n  for (const cluster of pattern) {\n    if (result.length > 0) {\n      result += \", \";\n    }\n    for (let i = 1; i < cluster; i++) {\n      steps.push(\"W\");\n      halfs += 2;\n    }\n    if (halfs === 10) {\n      // Special case for scales that end in a whole step.\n      steps.push(\"W\");\n      halfs += 2;\n    } else {\n      steps.push(\"H\");\n      halfs += 1;\n    }\n  }\n  return steps.join(\", \");\n}\n\nexport const MajorModes: MajorModeMap = {\n  Ionian: [3, 4],\n  Dorian: [2, 4, 1],\n  Phrygian: [1, 4, 2],\n  Lydian: [4, 3],\n  Mixolydian: [3, 3, 1],\n  Aeolian: [2, 3, 2],\n  Locrian: [1, 3, 3],\n  // Special case: Whole tone scale\n  \"Whole Tone\": [6],\n};\n\nclass ModeHighlighterOptionsBuilder extends KeyHighlighterOptionsBuilder {\n  mode(mode: MajorMode) {\n    const pattern = MajorModes[mode];\n    super.pattern(pattern);\n    return this;\n  }\n}\n\nexport class ModeBuilder {\n  private _opts: ModeHighlighterOptionsBuilder =\n    new ModeHighlighterOptionsBuilder();\n  constructor(startNote: Note) {\n    this._opts.startNote(startNote);\n  }\n\n  Note(note: Note) {\n    this._opts.startNote(note);\n    return this;\n  }\n\n  AlternatingWholeTones() {\n    this._opts.pattern(Array(12).fill(1));\n    return this;\n  }\n\n  WholeTone() {\n    this._opts.pattern([6]);\n    return this;\n  }\n\n  ModeNamed(name: MajorMode) {\n    this._opts.mode(name);\n    return this;\n  }\n\n  Ionian() {\n    this._opts.mode(\"Ionian\");\n    return this;\n  }\n\n  Dorian() {\n    this._opts.mode(\"Dorian\");\n    return this;\n  }\n\n  Phrygian() {\n    this._opts.mode(\"Phrygian\");\n    return this;\n  }\n\n  Lydian() {\n    this._opts.mode(\"Lydian\");\n    return this;\n  }\n\n  Mixolydian() {\n    this._opts.mode(\"Mixolydian\");\n    return this;\n  }\n\n  Aeolean() {\n    this._opts.mode(\"Aeolian\");\n    return this;\n  }\n\n  Locrean() {\n    this._opts.mode(\"Locrian\");\n    return this;\n  }\n\n  BracketsWholeHalf() {\n    this._opts.bracketStyle(\"whole-half\");\n    return this;\n  }\n\n  BracketsRunNumbers() {\n    this._opts.bracketStyle(\"run-num\");\n    return this;\n  }\n\n  BracketsScaleNumbers() {\n    this._opts.bracketStyle(\"scale-num\");\n    return this;\n  }\n\n  Animate(shouldAnimate = true) {\n    this._opts.shouldAnimate(shouldAnimate);\n    return this;\n  }\n\n  ColorSingleFirst() {\n    this._opts.oddColor(\"color-1\");\n    this._opts.evenColor(\"color-1\");\n    return this;\n  }\n\n  ColorSingleSecond() {\n    this._opts.oddColor(\"color-2\");\n    this._opts.evenColor(\"color-2\");\n    return this;\n  }\n\n  ColorDual() {\n    this._opts.oddColor(\"color-1\");\n    this._opts.evenColor(\"color-2\");\n    return this;\n  }\n\n  ColorDualLight() {\n    this._opts.oddColor(\"color-1 lighten\");\n    this._opts.evenColor(\"color-2 lighten\");\n    return this;\n  }\n\n  build(): KeyHighlighter {\n    return new KeyHighlighter(this._opts.build());\n  }\n}\n","\ntype NaturalNote = \"C\" | \"D\" | \"E\" | \"F\" | \"G\" | \"A\" | \"B\";\ntype Accidental = \"#\" | \"b\" | undefined;\nexport type Note = {\n  name: NaturalNote;\n  acc?: Accidental;\n  oct: number;\n  highlight?: string;\n  bracket?: \"left\" | \"middle\" | \"right\" | \"solo\";\n  bracketColor?: \"bracket-color-1\" |\n  \"bracket-color-2\" |\n  \"bracket-color-1 lighten\" |\n  \"bracket-color-2 lighten\";\n  bracketLabel?: string;\n  playable?: boolean;\n};\nconst CHROMA = \"C_D_EF_G_A_B\";\nconst accidentalOffset = (acc: Accidental): number => {\n  if (acc === \"#\") {\n    return 1;\n  } else if (acc === \"b\") {\n    return -1;\n  }\n  return 0;\n};\n\nexport const noteName = (note: Note, octTranspose?: number): string => {\n  const prettyName = prettyNoteName(note);\n  const oct = (note.oct ?? 0) + (octTranspose ?? 0);\n  return `${prettyName}${oct}`;\n}\n\nexport const prettyNoteName = (note: Note): string => {\n  const acc = note.acc ? note.acc : \"\";\n  return `${note.name}${acc}`;\n}\n\nexport const noteNamed = (name: string): Note => {\n  const naturalName = name.substring(0, 1) as NaturalNote;\n  let acc: Accidental = undefined;\n  let chIdx = 1;\n  const ch = name[chIdx];\n  if (ch === '#' || ch === 'b') {\n    acc = `${ch}` as Accidental;\n    chIdx++;\n  }\n  const oct = chIdx < name.length ?  parseInt(name.substring(chIdx)) : 0;\n  return {\n    name: naturalName,\n    acc,\n    oct\n  }\n};\n\nexport const noteIndex = (note: Note): number => {\n  const offset = accidentalOffset(note.acc);\n  const noteOrder = CHROMA.indexOf(note.name) + offset;\n  return note.oct * 12 + noteOrder;\n};\n\nexport const noteForIndex = (idx: number): Note => {\n  const oct = Math.floor(idx / 12);\n  const chromaticDegree = idx % 12;\n  var noteName = CHROMA[chromaticDegree];\n  var acc = undefined;\n  if (noteName === \"_\") {\n    acc = \"#\";\n    noteName = CHROMA[chromaticDegree - 1];\n  }\n  return {\n    name: noteName as NaturalNote,\n    acc: acc as Accidental,\n    oct: oct,\n  };\n};\nexport const noteColor = (note: Note): string => {\n  const offset = accidentalOffset(note.acc);\n  return offset === 0 ? \"white\" : \"black\";\n};\nexport function bracketClass(bracket?: \"left\" | \"middle\" | \"right\" | \"solo\") {\n  let classString: string;\n\n  switch (bracket) {\n    case \"left\":\n      classString = \"left middle\";\n      break;\n    case \"middle\":\n      classString = \"middle\";\n      break;\n    case \"right\":\n      classString = \"middle right\";\n      break;\n    case \"solo\":\n      classString = \"left middle right\";\n      break;\n    default:\n      classString = \"\";\n  }\n  return classString;\n}\n\n\n","import { createContext, PropsWithChildren } from \"react\";\nimport { Note, noteIndex } from \"./Notes\";\n\nexport const SoundPlayerContext = createContext<SoundPlayer | null>(null);\n\ntype NoteLength = 1 | 2 | 4 | 8 | 16 | 32;\n\ntype ASDR = {\n  attack: number;\n  decay: number;\n  sustain: number;\n  release: number;\n};\n\ntype VoiceParams = {\n  gain: number;\n  asdr: ASDR;\n  modDepth: number;\n  modRatio: number;\n  carrierRatio: number;\n  carrierWave: OscillatorType;\n  modWave: OscillatorType;\n};\n\nclass FMSynthVoice {\n  private carrier: OscillatorNode;\n  private modulator: OscillatorNode;\n  private gain: GainNode;\n  private modDepth: GainNode;\n  private params: VoiceParams;\n\n  constructor(context: AudioContext, params: VoiceParams) {\n    this.params = params;\n    this.carrier = context.createOscillator();\n    this.modulator = context.createOscillator();\n    this.gain = context.createGain();\n    this.modDepth = context.createGain();\n\n    this.modulator.type = \"square\";\n    this.carrier.frequency.value = this.params.carrierRatio * 440;\n    this.modulator.frequency.value = this.params.modRatio * 440;\n    this.modulator.connect(this.modDepth).connect(this.carrier.frequency);\n    this.carrier.connect(this.gain);\n    this.gain.connect(context.destination);\n\n    this.modDepth.gain.value = this.params.modDepth;\n    this.gain.gain.value = 0;\n    this.carrier.start();\n    this.modulator.start();\n  }\n\n  private applyASDR(\n    param: AudioParam,\n    start: number,\n    duration: number,\n    asdr: ASDR,\n    gain: number\n  ) {\n    param.setValueAtTime(0, start);\n    param.linearRampToValueAtTime(gain, start + asdr.attack);\n    param.linearRampToValueAtTime(\n      asdr.sustain * gain,\n      start + asdr.attack + asdr.decay\n    );\n    param.linearRampToValueAtTime(0, start + duration + asdr.release);\n  }\n\n  public setFrequencyAtTime(frequency: number, time: number) {\n    const cF = this.params.carrierRatio * frequency;\n    const mF = this.params.modRatio * frequency;\n    this.carrier.frequency.setValueAtTime(cF, time);\n    this.modulator.frequency.setValueAtTime(mF, time);\n  }\n\n  public setModulationDepth(depth: number) {\n    this.gain.gain.value = depth;\n  }\n\n  public playNoteAt(start: number, note: number, duration: number) {\n    const frequency = 440 * Math.pow(2, (note - 69) / 12);\n    this.gain.gain.setValueAtTime(0, start);\n    this.setFrequencyAtTime(frequency, start);\n    this.applyASDR(\n      this.gain.gain,\n      start,\n      duration,\n      this.params.asdr,\n      this.params.gain\n    );\n  }\n}\n\nclass FMSynthVoiceLayer {\n  private _voices: FMSynthVoice[];\n\n  constructor(voices: FMSynthVoice[]) {\n    this._voices = voices;\n  }\n\n  public playNoteAt(start: number, note: number, duration: number) {\n    for (let v of this._voices) {\n      v.playNoteAt(start, note, duration);\n    }\n  }\n}\n\nclass FMSynth {\n  private _context: AudioContext;\n  private _voices: FMSynthVoiceLayer[];\n  private _currentVoice: number;\n\n  constructor() {\n    const transient = {\n      asdr: {\n        attack: 0.001,\n        decay: 0.001,\n        sustain: 0.01,\n        release: 0.2,\n      },\n      gain: 0.1,\n      modDepth: 200,\n      modRatio: 24,\n      carrierRatio: 3,\n      carrierWave: \"sine\" as OscillatorType,\n      modWave: \"triangle\" as OscillatorType,\n    };\n    const mainVoiceParams = {\n      asdr: {\n        attack: 0.01,\n        decay: 0.03,\n        sustain: 0.3,\n        release: 0.2,\n      },\n      gain: 0.4,\n      modDepth: 10,\n      modRatio: 4,\n      carrierRatio: 1,\n      carrierWave: \"sine\" as OscillatorType,\n      modWave: \"sine\" as OscillatorType,\n    };\n    this._context = new AudioContext();\n    this._voices = [];\n    this._currentVoice = 0;\n    for (let i = 0; i < 3; i++) {\n      const v1 = new FMSynthVoice(this._context, transient);\n      const v2 = new FMSynthVoice(this._context, mainVoiceParams);\n      const voiceLayer = new FMSynthVoiceLayer([v1, v2]);\n      this._voices.push(voiceLayer);\n    }\n  }\n\n  public isReady(): boolean {\n    return this._context.state === \"running\";\n  }\n\n  public makeReady() {\n    if (!this.isReady()) {\n      this._context.resume();\n    }\n  }\n\n  public contextTime(): number {\n    return this._context.currentTime;\n  }\n\n  public playNoteAt(start: number, note: number, duration: number) {\n    this._voices[this._currentVoice].playNoteAt(start, note, duration);\n    this._currentVoice = (this._currentVoice + 1) % this._voices.length;\n  }\n}\n\nexport class SoundPlayer {\n  private _synth?: FMSynth;\n  private _beatLength: number;\n  private _nextNoteTime: number;\n  private _octave: number;\n\n  constructor(bpm: number) {\n    this._octave = 4;\n    this._beatLength = (4 * 60) / bpm;\n    this._nextNoteTime = 0;\n  }\n\n  isReady(): boolean {\n    return this._synth !== undefined && this._synth.isReady();\n  }\n\n  playChord(notes: Note[], length: NoteLength) {\n    if (this._synth === undefined) {\n      this._synth = new FMSynth();\n    }\n    if (!this.isReady()) {\n      this._synth.makeReady();\n      // Don't queue up notes if we're not ready.\n      return;\n    }\n    const noteStart = Math.max(this._nextNoteTime, this._synth!.contextTime());\n    const noteLen = this._beatLength / length;\n    const tones = notes.map((n) => noteIndex(n) + 12 * this._octave);\n    //Todo make this play a chord instead of just the first note.\n    this._synth!.playNoteAt(noteStart, tones[0], noteLen);\n    this._nextNoteTime = noteStart + noteLen;\n  }\n\n  playNote(note: Note, length: NoteLength) {\n    this.playChord([note], length);\n  }\n}\n\nexport const SoundPlayerProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const player = new SoundPlayer(120);\n\n  return (\n    <SoundPlayerContext.Provider value={player}>\n      {children}\n    </SoundPlayerContext.Provider>\n  );\n};\n"],"names":["GlobalOptionsContext","createContext","kbBackgroundHighlightEnabled","kbSoundEnabled","kbNoteNamesEnabled","OptionsWidget","setGlobalOptions","useState","rev","setRev","appliedRev","setAppliedRev","options","useContext","active","setActive","highlightsOn","setHighlightsOn","noteNamesOn","setNoteNamesOn","useEffect","r","settingsColor","settingsSize","className","onMouseLeave","toggle","undefined","color","size","onClick","GlobalOptionsProvider","children","globalOptions","Provider","value","label","onHighlightBgClick","control","checked","onChange","inputProps","labelPlacement","componentsProps","typography","Key","note","globals","blackWhite","noteColor","hl","highlight","bracketCss","bracketClass","bracket","bracketColor","noteCss","name","acc","prettyName","prettyNoteName","bracketLabel","WholeToneLightBG","ModeBuilder","noteNamed","AlternatingWholeTones","ColorDualLight","build","modeStarts","indexForMode","mode","modeIndex","Object","keys","MajorModes","indexOf","ScaleInfo","scaleStart","scaleMode","namingConvention","patternConvention","noteName","modeName","prettyModeName","prettyPattern","Keyboard","from","to","shouldAnimate","canTranspose","canChangeMode","staticHighlighters","player","SoundPlayerContext","progress","setProgress","lastTopNote","setLastTopNote","notes","setNotes","didFadeIn","setDidFadeIn","playRequested","setPlayRequested","currentHighlighters","setHighlighters","currentScaleStart","setCurrentScaleStart","currentScaleMode","setCurrentScaleMode","timeoutId","setTimeout","clearTimeout","length","backgroundHl","scaleHl","ModeNamed","ColorDual","BracketsRunNumbers","Animate","playable","fromIndex","noteIndex","toIndex","allNotes","Array","fill","map","i","idx","noteId","noteForIndex","topNoteIndex","Math","floor","reset","highlighter","forEach","index","opts","accept","topNote","playNote","previousNotes","sizeClass","Piano","Slider","valueLabelDisplay","e","activeThumb","newProgress","isArray","QueueMusic","marks","min","max","valueLabelFormat","singleValue","newStartIndex","newStartNote","Palette","step","findIndex","v","KeyHighlighterOptionsBuilder","_startNote","oct","_pattern","_oddColor","_evenColor","_shouldAnimate","_bracketStyle","startNote","this","pattern","oddColor","evenColor","bracketStyle","forceBG","KeyHighlighter","patternIndex","parity","currentRun","scaleNumber","runTarget","halfSteps","bracketPos","addBracket","doHighlight","charAt","addBracketLabel","endRun","targetName","startRun","convention","join","result","halfs","steps","cluster","push","Ionian","Dorian","Phrygian","Lydian","Mixolydian","Aeolian","Locrian","ModeHighlighterOptionsBuilder","_opts","CHROMA","accidentalOffset","naturalName","substring","chIdx","ch","parseInt","offset","noteOrder","chromaticDegree","classString","FMSynthVoice","context","params","carrier","modulator","gain","modDepth","createOscillator","createGain","type","frequency","carrierRatio","modRatio","connect","destination","start","param","duration","asdr","setValueAtTime","linearRampToValueAtTime","attack","sustain","decay","release","time","cF","mF","depth","pow","setFrequencyAtTime","applyASDR","FMSynthVoiceLayer","voices","_voices","playNoteAt","FMSynth","_context","_currentVoice","transient","carrierWave","modWave","mainVoiceParams","AudioContext","v1","v2","voiceLayer","state","isReady","resume","currentTime","SoundPlayer","bpm","_synth","_beatLength","_nextNoteTime","_octave","noteStart","contextTime","noteLen","tones","n","makeReady","playChord","SoundPlayerProvider"],"sourceRoot":""}